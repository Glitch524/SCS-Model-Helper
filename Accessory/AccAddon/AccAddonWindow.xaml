<base:BaseWindow
	x:Class="SCS_Mod_Helper.Accessory.AccAddon.AccAddonWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:SCS_Mod_Helper.Accessory.AccAddon"
	xmlns:manifest="clr-namespace:SCS_Mod_Helper.Manifest"
	xmlns:utils="clr-namespace:SCS_Mod_Helper.Utils"
	xmlns:base="clr-namespace:SCS_Mod_Helper.Base"
	d:DataContext="{d:DesignInstance Type=local:AccessoryAddonItem}"
	mc:Ignorable="d"
	Title="{DynamicResource TitleAccessoryAddon}"
	Width="1220"
	Height="700"
	WindowStartupLocation="CenterOwner"
	Closing="SaveOnClosing">
	<base:BaseWindow.Resources>
		<utils:ValueEqualsConverter
			x:Key="ValueEquals" />
		<utils:HideInConverter
			x:Key="HideInConverter" />
		<utils:MultiNullCheckConverter
			x:Key="MultiNullCheck" />
		<ContextMenu
			x:Key="MenuModelType" />
		<ContextMenu
			x:Key="MenuLook" />
		<ContextMenu
			x:Key="MenuVariant" />
		<ContextMenu
			x:Key="MenuOthers">
			<MenuItem
				Header="{DynamicResource MenuOthersExteriorModel}"
				Click="OnMenuClicked"
				Tag="exterior_model" />
			<MenuItem
				Header="{DynamicResource MenuOthersExteriorModelUK}"
				Click="OnMenuClicked"
				Tag="exterior_model_uk" />
			<MenuItem
				Header="{DynamicResource MenuOthersData}"
				Click="OnMenuClicked"
				Tag="data" />
			<MenuItem
				Header="{DynamicResource MenuOthersSuitableFor}"
				Click="OnMenuClicked"
				Tag="suitable_for" />
			<MenuItem
				Header="{DynamicResource MenuOthersConflictWith}"
				Click="OnMenuClicked"
				Tag="conflict_with" />
			<MenuItem
				Header="{DynamicResource MenuOthersDefaults}"
				Click="OnMenuClicked"
				Tag="defaults" />
			<MenuItem
				Header="{DynamicResource MenuOthersOverrides}"
				Click="OnMenuClicked"
				Tag="overrides" />
			<MenuItem
				Header="{DynamicResource MenuOtherRequire}"
				Click="OnMenuClicked"
				Tag="require" />
		</ContextMenu>
	</base:BaseWindow.Resources>
	<Grid
		x:Name="GridMain"
		Margin="10">
		<Grid.ColumnDefinitions>
			<ColumnDefinition
				Width="*" />
			<ColumnDefinition
				Width="2*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition
				Height="*" />
			<RowDefinition
				Height="Auto" />
			<RowDefinition
				Height="Auto" />
		</Grid.RowDefinitions>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition
					Height="Auto" />
				<RowDefinition
					Height="*" />
			</Grid.RowDefinitions>
			<StackPanel>
				<StackPanel>
					<TextBlock
						x:Name="TitleProjectLocation"
						Grid.ColumnSpan="2"
						TextWrapping="Wrap"
						VerticalAlignment="Center"
						Text="{DynamicResource SCSProjectLocation}" />
					<TextBox
						x:Name="TextProjectLocation"
						Padding="3,3,3,3"
						IsReadOnly="True"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						MaxLines="1"
						d:DataContext="{d:DesignInstance Type=manifest:ModProject}"
						Text="{Binding ProjectLocation}">
						<TextBox.Style>
							<Style
								TargetType="TextBox">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding ProjectExist}"
										Value="false">
										<Setter
											Property="Foreground"
											Value="Red" />
										<Setter
											Property="ToolTip"
											Value="{DynamicResource SCSProjectLocationTipNotExist}" />
									</DataTrigger>
									<Trigger
										Property="Text"
										Value="">
										<Setter
											Property="Background"
											Value="Yellow" />
									</Trigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
				</StackPanel>
				<Grid
					Margin="0,5,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="5" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="*" />
						<RowDefinition
							Height="*" />
						<RowDefinition
							Height="*" />
						<RowDefinition
							Height="*" />
					</Grid.RowDefinitions>

					<StackPanel
						Grid.ColumnSpan="3">
						<TextBlock
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							Text="{DynamicResource ModelDisplayName}" />
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="Auto" />
								<ColumnDefinition
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								x:Name="TextDisplayName"
								Padding="3,3,3,3"
								Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}"
								TextWrapping="Wrap"
								BorderThickness="1,1,1,1"
								VerticalAlignment="Top">
								<TextBox.Style>
									<Style
										TargetType="TextBox">
										<Style.Triggers>
											<Trigger
												Property="Text"
												Value="">
												<Setter
													Property="Background"
													Value="Yellow" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
							<Button
								x:Name="ButtonCheckRes"
								Grid.Column="1"
								Click="CheckStringRes"
								Visibility="{Binding CheckResVisibility}"
								VerticalAlignment="Top"
								HorizontalAlignment="Left"
								Padding="3,3,3,3"
								BorderThickness="0,1,1,1"
								Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								BorderBrush="#FFABADB3">
								<Image
									Source="/Images/Search.png" />
							</Button>
							<Popup
								x:Name="PopupCheckRes"
								PlacementTarget="{Binding ElementName=ButtonCheckRes}"
								PopupAnimation="Slide"
								AllowsTransparency="True"
								IsOpen="{Binding PopupCheckOpen}"
								StaysOpen="False">
								<Grid
									Background="White">
									<Border
										BorderBrush="Gray"
										BorderThickness="1" />
									<StackPanel
										Margin="10">
										<TextBlock>
											<Run
												Text="{DynamicResource CheckResResult}" />
										</TextBlock>
										<Border
											Margin="0,10,0,10"
											Background="Gray"
											Height="1" />
										<TextBlock
											Text="{Binding CheckResResult}" />
										<Border
											Margin="0,10,0,10"
											Background="Gray"
											Height="1" />
										<TextBlock>
											<Run
												Text="{DynamicResource CheckResResultTips}" />
										</TextBlock>
									</StackPanel>
								</Grid>
							</Popup>
							<Button
								x:Name="ButtonChooseRes"
								Grid.Column="2"
								Click="ChooseStringRes"
								VerticalAlignment="Top"
								HorizontalAlignment="Left"
								Padding="3,3,3,3"
								BorderThickness="0,1,1,1"
								Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								BorderBrush="#FFABADB3">
								<Image
									Source="/Images/Web.png" />
							</Button>
						</Grid>
					</StackPanel>
					
					<StackPanel
						Grid.Row="1"
						Margin="0,5,0,0">
						<StackPanel
							Orientation="Horizontal">
							<TextBlock
								x:Name="TitleModelName"
								TextWrapping="Wrap"
								Text="{DynamicResource ModelName}" />
							<Border
								ToolTip="{DynamicResource ModelNameTip}"
								Width="{Binding ActualHeight, ElementName=TitleModelName, Mode=OneWay}"
								Height="{Binding ActualHeight, ElementName=TitleModelName, Mode=OneWay}">
								<Image
									Source="/Images/ExclamationPoint.png" />
							</Border>
						</StackPanel>
						<TextBox
							x:Name="TextModelName"
							Padding="3,3,3,3"
							TextWrapping="Wrap"
							MaxLines="1"
							Text="{Binding ModelName}"
							VerticalAlignment="Top">
							<TextBox.Style>
								<Style
									TargetType="TextBox">
									<Style.Triggers>
										<Trigger
											Property="Text"
											Value="">
											<Setter
												Property="Background"
												Value="Yellow" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
					</StackPanel>

					<StackPanel
						Grid.Row="1"
						Grid.Column="2"
						Margin="0,5,0,0">
						<StackPanel
							Orientation="Horizontal">
							<TextBlock
								TextWrapping="Wrap"
								VerticalAlignment="Top"
								Text="{DynamicResource PartType}" />
							<Border
								ToolTip="{DynamicResource PartTypeTip}"
								Height="{Binding ActualHeight, ElementName=TitleIconName, Mode=OneWay}">
								<Image
									Source="/Images/ExclamationPoint.png" />
							</Border>
						</StackPanel>
						<ComboBox
							x:Name="TextPartType"
							Padding="3,3,3,3"
							DisplayMemberPath="PartTypeDisplay"
							SelectedValuePath="PartTypeValue"
							SelectedValue="{Binding PartType}"
							ItemsSource="{Binding PartTypes}"
							IsEditable="True"
							IsReadOnly="true" />
					</StackPanel>

					<StackPanel
						Grid.Row="2"
						Margin="0,5,0,0">
						<TextBlock
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							Text="{DynamicResource ModelPrice}" />
						<TextBox
							x:Name="TextPrice"
							Padding="3,3,3,3"
							Text="{Binding Price}"
							MaxLines="1"
							PreviewTextInput="NumberOnly"
							TextWrapping="Wrap"
							VerticalAlignment="Top">
							<TextBox.Style>
								<Style
									TargetType="TextBox">
									<Style.Triggers>
										<Trigger
											Property="Text"
											Value="">
											<Setter
												Property="Background"
												Value="Yellow" />
										</Trigger>
										<Trigger
											Property="Text"
											Value="0">
											<Setter
												Property="Background"
												Value="Red" />
											<Setter
												Property="ToolTip"
												Value="{DynamicResource ModelPriceErrNot0}" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
					</StackPanel>

					<StackPanel
						Grid.Row="2"
						Grid.Column="2"
						Margin="0,5,0,0">
						<TextBlock
							TextWrapping="Wrap"
							VerticalAlignment="Top">
						<Run
								Language="zh-cn"
								Text="{DynamicResource ModelUnlockLevel}" />
						</TextBlock>
						<TextBox
							x:Name="TextUnlockLevel"
							Padding="3,3,3,3"
							Text="{Binding UnlockLevel}"
							MaxLines="1"
							PreviewTextInput="NumberOnly"
							TextWrapping="Wrap"
							VerticalAlignment="Top">
							<TextBox.Style>
								<Style
									TargetType="TextBox">
									<Style.Triggers>
										<Trigger
											Property="Text"
											Value="">
											<Setter
												Property="Background"
												Value="Yellow" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
					</StackPanel>

					<StackPanel
						Grid.Row="3"
						Margin="0,5,0,0">
						<StackPanel
							Orientation="Horizontal">
							<TextBlock
								x:Name="TitleIconName"
								TextWrapping="Wrap"
								VerticalAlignment="Top"
								Text="{DynamicResource ModelIcon}" />
							<Border
								ToolTip="{DynamicResource ModelIconTip}"
								Height="{Binding ActualHeight, ElementName=TitleIconName, Mode=OneWay}">
								<Image
									Source="/Images/ExclamationPoint.png" />
							</Border>
						</StackPanel>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="Auto" />
								<ColumnDefinition
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								x:Name="TextIconName"
								Grid.Column="0"
								Padding="3,3,3,3"
								Text="{Binding IconName}"
								MaxLines="1"
								TextWrapping="Wrap"
								VerticalAlignment="Top"
								BorderThickness="1,1,0,1">
								<TextBox.Style>
									<Style
										TargetType="TextBox">
										<Style.Triggers>
											<Trigger
												Property="Text"
												Value="">
												<Setter
													Property="Background"
													Value="Yellow" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
							<Button
								x:Name="ButtonIconNameClear"
								Grid.Column="1"
								Content=" × "
								Click="ButtonClearClick"
								BorderThickness="0,1,1,1"
								Background="Transparent"
								BorderBrush="#FFABADB3">
								<Button.Style>
									<Style
										TargetType="Button">
										<Style.Triggers>
											<DataTrigger
												Binding="{Binding Text, ElementName=TextIconName}"
												Value="">
												<Setter
													Property="Visibility"
													Value="Collapsed" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</Button.Style>
							</Button>
							<Button
								x:Name="ButtonIconName"
								Grid.Column="2"
								Padding="3,3,3,3"
								BorderThickness="0,1,1,1"
								Click="ButtonChooseIcon"
								Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								VerticalAlignment="Top"
								BorderBrush="#FFABADB3">
								<Image
									Source="/Images/Folder.png" />
							</Button>
						</Grid>
					</StackPanel>
				</Grid>

				<GridSplitter
					Height="1"
					Margin="0,7,0,7"
					ResizeBehavior="PreviousAndCurrent"
					VerticalAlignment="Center"
					Background="#FF4C4B4B"
					HorizontalAlignment="Stretch" />

				<StackPanel
					Margin="0,0,0,0">
					<TextBlock
						Grid.ColumnSpan="3"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						Text="{DynamicResource ModelFilePath}" />
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="Auto" />
							<ColumnDefinition
								Width="Auto" />
						</Grid.ColumnDefinitions>
						<TextBox
							x:Name="TextModelPath"
							Grid.Column="0"
							Padding="3,3,3,3"
							Text="{Binding ModelPath}"
							TextWrapping="Wrap"
							BorderThickness="1,1,0,1"
							MaxLines="2"
							VerticalAlignment="Center">
							<TextBox.Style>
								<Style
									TargetType="TextBox">
									<Style.Triggers>
										<Trigger
											Property="Text"
											Value="">
											<Setter
												Property="Background"
												Value="Yellow" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
						<Button
							x:Name="ButtonChooseModelClear"
							Grid.Column="1"
							Content=" × "
							Click="ButtonClearClick"
							BorderThickness="0,1,1,1"
							Background="Transparent"
							BorderBrush="#FFABADB3">
							<Button.Style>
								<Style
									TargetType="Button">
									<Style.Triggers>
										<DataTrigger
											Binding="{Binding Text, ElementName=TextModelPath}"
											Value="">
											<Setter
												Property="Visibility"
												Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
						<Button
							x:Name="ButtonChooseModel"
							Grid.Column="2"
							Padding="3,3,3,3"
							Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
							Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
							Click="ButtonChooseModelClick"
							VerticalAlignment="Top"
							BorderThickness="0,1,1,1"
							BorderBrush="#FFABADB3"
							Grid.ColumnSpan="2">
							<Image
								Source="/Images/Folder.png" />
						</Button>
					</Grid>
				</StackPanel>

				<StackPanel
					Margin="0,2,0,0">
					<StackPanel
						Orientation="Horizontal">
						<TextBlock
							x:Name="TitleModelPathUK"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							TextWrapping="Wrap"
							VerticalAlignment="Top"
							Text="{DynamicResource ModelFilePathUK}" />
						<Border
							ToolTip="{DynamicResource ModelFilePathUKTip}">
							<Image
								Source="/Images/ExclamationPoint.png" />
						</Border>
					</StackPanel>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="Auto" />
							<ColumnDefinition
								Width="Auto" />
						</Grid.ColumnDefinitions>
						<TextBox
							x:Name="TextModelPathUK"
							Grid.Column="0"
							Padding="3,3,3,3"
							Text="{Binding ModelPathUK}"
							TextWrapping="Wrap"
							BorderThickness="1,1,0,1"
							MaxLines="2"
							VerticalAlignment="Center" />
						<Button
							x:Name="ButtonChooseModelUKClear"
							Grid.Column="1"
							Content=" × "
							Click="ButtonClearClick"
							BorderThickness="0,1,1,1"
							Background="Transparent"
							BorderBrush="#FFABADB3">
							<Button.Style>
								<Style
									TargetType="Button">
									<Style.Triggers>
										<DataTrigger
											Binding="{Binding Text, ElementName=TextModelPathUK}"
											Value="">
											<Setter
												Property="Visibility"
												Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
						<Button
							x:Name="ButtonChooseModelUK"
							Grid.Column="2"
							Padding="3,3,3,3"
							Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
							Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
							Click="ButtonChooseModelClick"
							VerticalAlignment="Top"
							BorderThickness="0,1,1,1"
							BorderBrush="#FFABADB3">
							<Image
								Source="/Images/Folder.png" />
						</Button>
					</Grid>
				</StackPanel>

				<StackPanel
					Margin="0,2,0,0">
					<StackPanel
						Orientation="Horizontal">
						<CheckBox
							x:Name="CheckUseCollPath"
							Grid.Row="0"
							Grid.Column="0"
							Grid.ColumnSpan="3"
							VerticalAlignment="Top"
							IsChecked="{Binding UseCollPath}"
							Content="{DynamicResource ModelCollPath}" />
					</StackPanel>
					<Grid>
						<Grid.Style>
							<Style
								TargetType="Grid">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding IsChecked, ElementName=CheckUseCollPath}"
										Value="False">
										<Setter
											Property="Visibility"
											Value="Collapsed" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Grid.Style>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="*" />
							<ColumnDefinition
								Width="Auto" />
							<ColumnDefinition
								Width="Auto" />
						</Grid.ColumnDefinitions>
						<TextBox
							x:Name="TextCollPath"
							Grid.Column="0"
							Padding="3,3,3,3"
							Text="{Binding CollPath}"
							TextWrapping="Wrap"
							BorderThickness="1,1,0,1"
							MaxLines="2"
							VerticalAlignment="Center" />
						<Button
							x:Name="ButtonChooseCollClear"
							Grid.Column="1"
							Content=" × "
							Click="ButtonClearClick"
							BorderThickness="0,1,1,1"
							Background="Transparent"
							BorderBrush="#FFABADB3">
							<Button.Style>
								<Style
									TargetType="Button">
									<Style.Triggers>
										<DataTrigger
											Binding="{Binding Text, ElementName=TextCollPath}"
											Value="">
											<Setter
												Property="Visibility"
												Value="Collapsed" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
						<Button
							x:Name="ButtonChooseColl"
							Grid.Column="2"
							Padding="3,3,3,3"
							Width="{Binding ActualHeight, ElementName=TextDisplayName, Mode=OneWay}"
							Height="{Binding ActualHeight, ElementName=TextDisplayName, Mode=OneWay}"
							Click="ButtonChooseModelClick"
							VerticalAlignment="Top"
							BorderThickness="0,1,1,1"
							BorderBrush="#FFABADB3">
							<Image
								Source="/Images/Folder.png" />
						</Button>
					</Grid>
				</StackPanel>

				<StackPanel
					Margin="0,2,0,0">
					<TextBlock
						TextWrapping="Wrap"
						VerticalAlignment="Top">
					<Run
							Text="{DynamicResource ModelType}" />
					<Run
							Text="{DynamicResource ModelTypeTip}" />
					</TextBlock>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition
								Width="1*" />
							<ColumnDefinition
								Width="Auto" />
							<ColumnDefinition
								Width="2*" />
						</Grid.ColumnDefinitions>
						<ComboBox
							x:Name="TextModelType"
							Padding="3,3,3,3"
							Text="{Binding ModelType}"
							DisplayMemberPath="Accessory"
							IsEditable="True"
							IsTextSearchEnabled="True"
							ItemsSource="{Binding ModelTypes}"
							SelectedValue="{Binding CurrentModelType, Mode=TwoWay}">
						</ComboBox>
						<Button
							x:Name="ButtonCoverModelType"
							Grid.Column="1"
							Padding="3,3,3,3"
							Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
							Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
							BorderThickness="0,1,0,1"
							VerticalAlignment="Top"
							Click="ButtonCoverValue"
							BorderBrush="#FFABADB3">
							<Image
								Source="/Images/Paste.png" />
						</Button>
						<TextBox
							x:Name="TextAccName"
							Text="{Binding CurrentModelType.Name}"
							Grid.Column="2"
							Padding="3,3,3,3"
							TextWrapping="Wrap"
							IsReadOnly="True"
							VerticalContentAlignment="Center"
							ToolTip="{Binding CurrentModelType.Name}" />
					</Grid>
				</StackPanel>

				<Grid
					Margin="0,2,0,0">
					<Grid.RowDefinitions>
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="5" />
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Grid.Row="0"
						Grid.ColumnSpan="2"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						Text="{DynamicResource ModelLook}" />
					<ComboBox
						x:Name="TextLook"
						Grid.Row="1"
						Text="{Binding Look}"
						ItemsSource="{Binding LookList}"
						IsEditable="True"
						IsTextSearchEnabled="True" />
					<Button
						x:Name="ButtonCoverLook"
						Grid.Row="1"
						Grid.Column="1"
						Padding="3,3,3,3"
						Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
						Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
						BorderThickness="0,1,1,1"
						VerticalAlignment="Top"
						Click="ButtonCoverValue"
						BorderBrush="#FFABADB3">
						<Image
							Source="/Images/Paste.png" />
					</Button>
					<TextBlock
						Grid.Row="0"
						Grid.Column="3"
						Grid.ColumnSpan="2"
						TextWrapping="Wrap"
						VerticalAlignment="Top"
						Text="{DynamicResource ModelVariant}" />
					<ComboBox
						x:Name="TextVariant"
						Grid.Row="1"
						Grid.Column="3"
						Text="{Binding Variant}"
						ItemsSource="{Binding VariantList}"
						IsEditable="True"
						IsTextSearchEnabled="True" />
					<Button
						x:Name="ButtonCoverVariant"
						Grid.Row="1"
						Grid.Column="4"
						Padding="3,3,3,3"
						Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
						Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
						BorderThickness="0,1,1,1"
						VerticalAlignment="Top"
						Click="ButtonCoverValue"
						BorderBrush="#FFABADB3">
						<Image
							Source="/Images/Paste.png" />
					</Button>
				</Grid>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="5" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>
					<StackPanel
						Grid.Column="0"
						Margin="0,2,0,0">
						<TextBlock
							TextWrapping="Wrap"
							VerticalAlignment="Top">
							<Run
								Text="{DynamicResource HideIn}" />

						</TextBlock>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="1*" />
								<ColumnDefinition
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<TextBox
								x:Name="TextHideIn"
								Padding="3,3,3,3"
								IsReadOnly="True"
								Text="{Binding HideIn, Converter={StaticResource HideInConverter}}" />
							<Button
								x:Name="ButtonSetHideIn"
								Grid.Column="1"
								Padding="3,3,3,3"
								Width="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								Height="{Binding ActualHeight, ElementName=TextModelName, Mode=OneWay}"
								BorderThickness="0,1,1,1"
								VerticalAlignment="Top"
								Click="ButtonHideIn"
								BorderBrush="#FFABADB3">
								<Image
									Source="/Images/Add.png" />
							</Button>
							<Popup
								x:Name="PopupHideIn"
								PlacementTarget="{Binding ElementName=ButtonSetHideIn}"
								PopupAnimation="Slide"
								AllowsTransparency="True"
								StaysOpen="False"
								Placement="Top">
								<Grid>
									<Border
										Background="White"
										BorderThickness="1" 
										BorderBrush="Gray"/>
									<StackPanel
										Margin="10">
										<TextBlock
											Text="{DynamicResource TitleHideIn}"
											TextWrapping="Wrap" />
										<CheckBox
											x:Name="CheckMainView"
											Content="Main View"
											Margin="0,5,0,0"
											Tag="0x7"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckReflectionCube"
											Content="Reflection Cube"
											Margin="0,5,0,0"
											Tag="0x1F8"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckCloseMirror"
											Content="Close Mirror"
											Margin="0,5,0,0"
											Tag="0x600"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckFarMirror"
											Content="Far Mirror"
											Margin="0,5,0,0"
											Tag="0x1800"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckSideMirror"
											Content="Side Mirror"
											Margin="0,5,0,0"
											Tag="0x2000"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckFrontMirror"
											Content="Front Mirror"
											Margin="0,5,0,0"
											Tag="0x4000"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckShadows"
											Content="Shadows"
											Margin="0,5,0,0"
											Tag="0x1FFE0000"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
										<CheckBox
											x:Name="CheckRainReflection"
											Content="Rain reflection"
											Margin="0,5,0,0"
											Tag="0xE0000000"
											Checked="HideInChecked"
											Unchecked="HideInUnchecked" />
									</StackPanel>
								</Grid>
							</Popup>
						</Grid>
					</StackPanel>
				</Grid>
			</StackPanel>

			<Grid
				Grid.Row="1"
				Margin="0,2,0,0">
				<Grid.RowDefinitions>
					<RowDefinition
						Height="Auto" />
					<RowDefinition
						Height="*" />
				</Grid.RowDefinitions>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<TextBlock
						TextWrapping="Wrap"
						Text="{DynamicResource Others}"
						VerticalAlignment="Bottom" />
					<Border
						Grid.Column="1"
						ToolTip="{DynamicResource OthersTip}">
						<Image
							Source="/Images/ExclamationPoint.png" />
					</Border>
					<Button
						x:Name="ButtonOthersAdd"
						Grid.Column="3"
						Click="ButtonOthersClick">
						<Image
							Source="/Images/AddRow.png" />
					</Button>
					<Button
						x:Name="ButtonOthersRemove"
						Grid.Column="4"
						Click="ButtonOthersClick">
						<Image
							Source="/Images/DeleteRow.png" />
						<Button.Style>
							<Style
								TargetType="Button">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding SelectedIndex, ElementName=TableOthers}"
										Value="-1">
										<Setter
											Property="IsEnabled"
											Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
				</Grid>
				<DataGrid
					x:Name="TableOthers"
					RowHeaderWidth="0"
					Grid.Row="1"
					GridLinesVisibility="Horizontal"
					CanUserSortColumns="False"
					CanUserAddRows="False"
					d:ItemsSource="{d:SampleData ItemCount=2}"
					ItemsSource="{Binding OthersList}"
					AutoGenerateColumns="False"
					Grid.RowSpan="2">
					<DataGrid.HorizontalGridLinesBrush>
						<LinearGradientBrush
							EndPoint="0.5,1"
							StartPoint="0.5,0">
							<GradientStop
								Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"
								Offset="1" />
						</LinearGradientBrush>
					</DataGrid.HorizontalGridLinesBrush>
					<DataGrid.Columns>
						<DataGridTemplateColumn
							Header="{DynamicResource HeaderOthersName}"
							Width="*">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBox
										BorderThickness="0,0,0,0"
										Text="{Binding OthersName, UpdateSourceTrigger=PropertyChanged}"
										ToolTip="{Binding OthersNameTip}"
										ContextMenu="{DynamicResource MenuOthers}">
										<TextBox.Style>
											<Style
												TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger
														Binding="{Binding OthersName}"
														Value="">
														<Setter
															Property="Background"
															Value="Yellow" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTemplateColumn
							Header="{DynamicResource HeaderIsArray}"
							Width="Auto">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<CheckBox
										IsChecked="{Binding IsArray, UpdateSourceTrigger=PropertyChanged}"
										IsEnabled="{Binding CheckBoxEnabled}"
										HorizontalAlignment="Center" />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTemplateColumn
							Header="{DynamicResource HeaderUseQuote}"
							Width="Auto">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<CheckBox
										IsChecked="{Binding UseQuoteMark, UpdateSourceTrigger=PropertyChanged}"
										IsEnabled="{Binding CheckBoxEnabled}"
										HorizontalAlignment="Center" />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTemplateColumn
							Header="{DynamicResource HeaderOthersValue}"
							Width="*">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<TextBox
										BorderThickness="0,0,0,0"
										Text="{Binding OthersValue, UpdateSourceTrigger=PropertyChanged}">
										<TextBox.Style>
											<Style
												TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger
														Binding="{Binding OthersValue}"
														Value="">
														<Setter
															Property="Background"
															Value="Yellow" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
						<DataGridTemplateColumn
							Width="Auto">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<Button
										Padding="0,0,0,0"
										Click="ButtonPhysicsClick">
										<Image
											Source="/Images/Settings.png" />
										<Button.Style>
											<Style
												TargetType="Button">
												<Style.Triggers>
													<DataTrigger
														Binding="{Binding IsData}"
														Value="False">
														<Setter
															Property="Visibility"
															Value="Hidden" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
					</DataGrid.Columns>
				</DataGrid>
			</Grid>
		</Grid>

		<Grid
			x:Name="GridTrucks"
			Grid.Column="1"
			Margin="15,0,0,0">
			<Grid.RowDefinitions>
				<RowDefinition
					Height="Auto" />
				<RowDefinition>
					<RowDefinition.Style>
						<Style
							TargetType="RowDefinition">
							<Style.Triggers>
								<DataTrigger
									Binding="{Binding Path=IsExpanded, ElementName=ExpanderETS2}"
									Value="False">
									<Setter
										Property="Height"
										Value="Auto" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</RowDefinition.Style>
				</RowDefinition>
				<RowDefinition
					Height="Auto" />
				<RowDefinition>
					<RowDefinition.Style>
						<Style
							TargetType="RowDefinition">
							<Style.Triggers>
								<DataTrigger
									Binding="{Binding Path=IsExpanded, ElementName=ExpanderATS}"
									Value="False">
									<Setter
										Property="Height"
										Value="Auto" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</RowDefinition.Style>
				</RowDefinition>
			</Grid.RowDefinitions>
			<Grid
				Grid.Row="0"
				Grid.Column="0"
				Cursor="">
				<Grid.ColumnDefinitions>
					<ColumnDefinition
						Width="*" />
					<ColumnDefinition
						Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock>
					<Run
						Text="{DynamicResource ModelTruckTip}" />
				</TextBlock>

				<Button
					x:Name="ButtonInitialize"
					Grid.Column="1"
					Content="{DynamicResource ButtonInitializeTrucks}"
					Padding="20,5,20,5"
					FontSize="14"
					Click="ButtonTruckInitialize"
					VerticalAlignment="Bottom" />
			</Grid>
			<Expander
				x:Name="ExpanderETS2"
				Header="{DynamicResource ExpanderETS2}"
				Grid.Row="1"
				Margin="0,5,0,0"
				IsExpanded="{Binding TruckExpandedETS2}"
				d:IsExpanded="True"
				Padding="0,2,0,0"
				BorderBrush="Gray">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="452*" />
						<ColumnDefinition
							Width="207*" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="*" />
					</Grid.RowDefinitions>
					<CheckBox
						x:Name="SelectAllETS2"
						Grid.Row="0"
						Grid.Column="0"
						Content="{DynamicResource CheckBoxSelectAll}"
						IsChecked="{Binding SelectAllETS2}"
						VerticalContentAlignment="Bottom"
						VerticalAlignment="Top"
						Grid.ColumnSpan="2"
						Margin="0,8,0,0" />
					<Button
						x:Name="ButtonAddTruckETS2"
						Content="{DynamicResource TitleAddTruck}"
						Grid.Column="2"
						Padding="5,3,5,3"
						Click="ButtonAddTruckClick"
						VerticalAlignment="Center" />
					<Button
						x:Name="ButtonDeleteTruckETS2"
						Content="{DynamicResource ButtonDeleteTruck}"
						Grid.Column="3"
						Margin="5,0,0,0"
						Padding="5,3,5,3"
						Click="ButtonDeleteTruckClick"
						VerticalAlignment="Center">
						<Button.Style>
							<Style
								TargetType="Button">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding SelectedIndex, ElementName=TableTrucksETS2}"
										Value="-1">
										<Setter
											Property="IsEnabled"
											Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
					<DataGrid
						x:Name="TableTrucksETS2"
						RowHeaderWidth="0"
						BorderThickness="0,1,0,0"
						Grid.Column="0"
						Grid.ColumnSpan="4"
						GridLinesVisibility="Horizontal"
						CanUserSortColumns="False"
						ItemsSource="{Binding TrucksETS2}"
						d:ItemsSource="{d:SampleData ItemCount=2}"
						AutoGenerateColumns="False"
						Margin="0,23,0,0"
						Grid.RowSpan="2">
						<DataGrid.HorizontalGridLinesBrush>
							<LinearGradientBrush
								EndPoint="0.5,1"
								StartPoint="0.5,0">
								<GradientStop
									Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"
									Offset="1" />
							</LinearGradientBrush>
						</DataGrid.HorizontalGridLinesBrush>
						<DataGrid.Columns>
							<DataGridTemplateColumn
								Width="Auto">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<CheckBox
											HorizontalAlignment="Center"
											Click="TruckCheckBoxClick"
											IsChecked="{Binding Check, UpdateSourceTrigger=PropertyChanged}" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn
								Header="{DynamicResource TruckID}"
								Width="6*"
								Binding="{Binding TruckID}">
								<DataGridTextColumn.CellStyle>
									<Style
										TargetType="DataGridCell">
										<Setter
											Property="ToolTip"
											Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn
								Header="{DynamicResource TruckName}"
								Width="6*"
								Binding="{Binding IngameName}">
								<DataGridTextColumn.CellStyle>
									<Style
										TargetType="DataGridCell">
										<Setter
											Property="ToolTip"
											Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn
								Header="{DynamicResource ModelType}"
								Width="3*">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBox
											BorderThickness="0,0,0,0"
											Text="{Binding ModelType, UpdateSourceTrigger=PropertyChanged}"
											ContextMenu="{DynamicResource MenuModelType}">
											<TextBox.Style>
												<Style
													TargetType="TextBox">
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition
																	Binding="{Binding ModelType}"
																	Value="" />
																<Condition
																	Binding="{Binding Check}"
																	Value="True" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter
																	Property="Background"
																	Value="Yellow" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn
								Header="{DynamicResource ModelLook}"
								Width="3*">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBox
											BorderThickness="0,0,0,0"
											Text="{Binding Look, UpdateSourceTrigger=PropertyChanged}"
											ContextMenu="{DynamicResource MenuLook}">
											<TextBox.Style>
												<Style
													TargetType="TextBox">
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition
																	Binding="{Binding Look}"
																	Value="" />
																<Condition
																	Binding="{Binding Check}"
																	Value="True" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter
																	Property="Background"
																	Value="Yellow" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn
								Header="{DynamicResource ModelVariant}"
								Width="3*">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBox
											BorderThickness="0,0,0,0"
											Text="{Binding Variant, UpdateSourceTrigger=PropertyChanged}"
											ContextMenu="{DynamicResource MenuVariant}">
											<TextBox.Style>
												<Style
													TargetType="TextBox">
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition
																	Binding="{Binding Variant}"
																	Value="" />
																<Condition
																	Binding="{Binding Check}"
																	Value="True" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter
																	Property="Background"
																	Value="Yellow" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn
								Header="{DynamicResource TruckDescription}"
								Width="8*"
								Binding="{Binding Description}">
								<DataGridTextColumn.CellStyle>
									<Style
										TargetType="DataGridCell">
										<Setter
											Property="ToolTip"
											Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>

						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</Expander>

			<GridSplitter
				Margin="0,5,0,5"
				Height="1"
				Grid.Row="2"
				ResizeBehavior="PreviousAndCurrent"
				VerticalAlignment="Center"
				Background="#FF4C4B4B"
				HorizontalAlignment="Stretch" />

			<Expander
				x:Name="ExpanderATS"
				Header="{DynamicResource ExpanderATS}"
				Grid.Row="3"
				IsExpanded="{Binding TruckExpandedATS}"
				d:IsExpanded="True"
				Padding="0,2,0,0"
				BorderBrush="Gray">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="Auto" />
						<ColumnDefinition
							Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="*" />
					</Grid.RowDefinitions>
					<CheckBox
						x:Name="SelectAllATS"
						Grid.Row="0"
						Grid.Column="0"
						Content="{DynamicResource CheckBoxSelectAll}"
						IsChecked="{Binding SelectAllATS}"
						VerticalAlignment="Bottom" />
					<Button
						x:Name="ButtonAddTruckATS"
						Content="{DynamicResource TitleAddTruck}"
						Grid.Row="0"
						Grid.Column="1"
						Padding="5,3,5,3"
						Click="ButtonAddTruckClick" />
					<Button
						x:Name="ButtonDeleteTruckATS"
						Content="{DynamicResource ButtonDeleteTruck}"
						Grid.Row="0"
						Grid.Column="2"
						Margin="5,0,0,0"
						Padding="5,3,5,3"
						Click="ButtonDeleteTruckClick"
						VerticalAlignment="Bottom">
						<Button.Style>
							<Style
								TargetType="Button">
								<Style.Triggers>
									<DataTrigger
										Binding="{Binding SelectedIndex, ElementName=TableTrucksATS}"
										Value="-1">
										<Setter
											Property="IsEnabled"
											Value="False" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Button.Style>
					</Button>
					<DataGrid
						x:Name="TableTrucksATS"
						BorderThickness="0,1,0,0"
						RowHeaderWidth="0"
						Grid.Row="1"
						Grid.Column="0"
						Grid.ColumnSpan="3"
						GridLinesVisibility="Horizontal"
						CanUserSortColumns="False"
						ItemsSource="{Binding TrucksATS}"
						d:ItemsSource="{d:SampleData ItemCount=2}"
						AutoGenerateColumns="False">
						<DataGrid.HorizontalGridLinesBrush>
							<LinearGradientBrush
								EndPoint="0.5,1"
								StartPoint="0.5,0">
								<GradientStop
									Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"
									Offset="1" />
							</LinearGradientBrush>
						</DataGrid.HorizontalGridLinesBrush>
						<DataGrid.Columns>
							<DataGridTemplateColumn
								Width="Auto">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<CheckBox
											HorizontalAlignment="Center"
											Click="TruckCheckBoxClick"
											IsChecked="{Binding Check, UpdateSourceTrigger=PropertyChanged}" />
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn
								Header="{DynamicResource TruckID}"
								Width="6*"
								Binding="{Binding TruckID}">
								<DataGridTextColumn.CellStyle>
									<Style
										TargetType="DataGridCell">
										<Setter
											Property="ToolTip"
											Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTextColumn
								Header="{DynamicResource TruckName}"
								Width="6*"
								Binding="{Binding IngameName}">
								<DataGridTextColumn.CellStyle>
									<Style
										TargetType="DataGridCell">
										<Setter
											Property="ToolTip"
											Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
							<DataGridTemplateColumn
								Header="{DynamicResource ModelType}"
								Width="3*">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBox
											BorderThickness="0,0,0,0"
											Text="{Binding ModelType, UpdateSourceTrigger=PropertyChanged}"
											ContextMenu="{DynamicResource MenuModelType}">
											<TextBox.Style>
												<Style
													TargetType="TextBox">
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition
																	Binding="{Binding ModelType}"
																	Value="" />
																<Condition
																	Binding="{Binding Check}"
																	Value="True" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter
																	Property="Background"
																	Value="Yellow" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn
								Header="{DynamicResource ModelLook}"
								Width="3*">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBox
											BorderThickness="0,0,0,0"
											Text="{Binding Look, UpdateSourceTrigger=PropertyChanged}"
											ContextMenu="{DynamicResource MenuLook}">
											<TextBox.Style>
												<Style
													TargetType="TextBox">
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition
																	Binding="{Binding Look}"
																	Value="" />
																<Condition
																	Binding="{Binding Check}"
																	Value="True" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter
																	Property="Background"
																	Value="Yellow" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTemplateColumn
								Header="{DynamicResource ModelVariant}"
								Width="3*">
								<DataGridTemplateColumn.CellTemplate>
									<DataTemplate>
										<TextBox
											BorderThickness="0,0,0,0"
											Text="{Binding Variant, UpdateSourceTrigger=PropertyChanged}"
											ContextMenu="{DynamicResource MenuVariant}">
											<TextBox.Style>
												<Style
													TargetType="TextBox">
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition
																	Binding="{Binding Variant}"
																	Value="" />
																<Condition
																	Binding="{Binding Check}"
																	Value="True" />
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.Setters>
																<Setter
																	Property="Background"
																	Value="Yellow" />
															</MultiDataTrigger.Setters>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</TextBox.Style>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>
							<DataGridTextColumn
								Header="{DynamicResource TruckDescription}"
								Width="8*"
								Binding="{Binding Description}">
								<DataGridTextColumn.CellStyle>
									<Style
										TargetType="DataGridCell">
										<Setter
											Property="ToolTip"
											Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Content.Text}" />
									</Style>
								</DataGridTextColumn.CellStyle>
							</DataGridTextColumn>
						</DataGrid.Columns>
					</DataGrid>
				</Grid>
			</Expander>
		</Grid>

		<Popup
			x:Name="PopupAddTruck"
			PopupAnimation="Slide"
			AllowsTransparency="True"
			IsOpen="{Binding PopupAddTruckOpen}">
			<Grid Width="500">
				<Border
					Background="White"
					BorderThickness="1"
					BorderBrush="Gray" />
				<Grid
					Margin="10">
					<Grid.RowDefinitions>
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="Auto" />
						<RowDefinition
							Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition
							Width="*" />
						<ColumnDefinition
							Width="10" />
						<ColumnDefinition
							Width="*" />
					</Grid.ColumnDefinitions>
					<TextBlock
						Grid.Row="0"
						Grid.Column="0">
						<Run
							Text="{DynamicResource TruckID}" />
					</TextBlock>
					<TextBox
						x:Name="TextNewTruckID"
						Grid.Row="1"
						Grid.Column="0"
						Padding="3,3,3,3"
						Text="{Binding AddTruckID}"
						TextWrapping="Wrap"
						VerticalAlignment="Top" />
					<TextBlock
						Grid.Row="0"
						Grid.Column="2">
						<Run
							Text="{DynamicResource TruckName}" />
					</TextBlock>
					<TextBox
						x:Name="TextNewIngameName"
						Grid.Row="1"
						Grid.Column="2"
						Padding="3,3,3,3"
						Text="{Binding AddTruckIngameName}"
						TextWrapping="Wrap"
						VerticalAlignment="Top" />
					<TextBlock
						Grid.Row="2"
						Grid.Column="0"
						Grid.ColumnSpan="3"
						Margin="0,5,0,0">
						<Run
							Text="{DynamicResource TruckDescription}" />
					</TextBlock>
					<TextBox
						x:Name="TextNewDescription"
						Grid.Row="3"
						Grid.Column="0"
						Grid.ColumnSpan="3"
						Padding="3,3,3,3"
						Text="{Binding AddTruckDescription}"
						TextWrapping="Wrap"
						VerticalAlignment="Top" />
					<Button
						x:Name="ButtonAddTruckOK"
						Content="{DynamicResource ButtonOK}"
						Margin="0,10,0,0"
						Grid.Row="4"
						Grid.Column="0"
						Click="ButtonAddTruckResultClick">
						<Button.IsEnabled>
							<MultiBinding
								Converter="{StaticResource MultiNullCheck}"
								ConverterParameter="AND,Nonull">
								<Binding
									ElementName="TextNewTruckID"
									Path="Text" />
								<Binding
									ElementName="TextNewIngameName"
									Path="Text" />
							</MultiBinding>
						</Button.IsEnabled>
					</Button>
					<Button
						x:Name="ButtonAddTruckCancel"
						Content="{DynamicResource ButtonCancel}"
						Margin="0,10,0,0"
						Grid.Row="4"
						Grid.Column="2"
						Click="ButtonAddTruckResultClick" />
				</Grid>
			</Grid>
		</Popup>

		<GridSplitter
			Grid.Row="1"
			Grid.ColumnSpan="2"
			Height="1"
			Margin="0,7,0,7"
			ResizeBehavior="PreviousAndCurrent"
			VerticalAlignment="Center"
			Background="#FF4C4B4B"
			HorizontalAlignment="Stretch" />

		<Grid
			Grid.Row="2"
			Grid.Column="0"
			Grid.ColumnSpan="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="*" />
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition
					Width="Auto" />
			</Grid.ColumnDefinitions>
			<Button
				x:Name="ButtonSave"
				Content="{DynamicResource SaveDED}"
				Grid.Column="0"
				Padding="40,3,40,3"
				Click="ButtonSaveClick" />
			<Button
				x:Name="ButtonLoad"
				Content="{DynamicResource LoadDED}"
				Grid.Column="1"
				Margin="5,0,0,0"
				Padding="40,3,40,3"
				Click="ButtonLoadClick" />
			<CheckBox
				x:Name="CheckDeleteUnchecked"
				Grid.Column="3"
				IsChecked="{Binding DeleteUnchecked}"
				VerticalContentAlignment="Center"
				VerticalAlignment="Top">
				<TextBlock
					TextWrapping="Wrap"
					Text="{DynamicResource CheckBoxDeleteUnchecked}" />
			</CheckBox>
			<Button
				x:Name="ButtonStart"
				Grid.Column="4"
				Content="{DynamicResource ButtonStart}"
				Margin="5,0,0,0"
				Padding="40,5,40,5"
				FontSize="15"
				Click="ButtonStartClick" />
		</Grid>
	</Grid>
</base:BaseWindow>
